{"version":3,"sources":["js/myTimer.js","js/startTimer.js","index.js"],"names":["CountdownTimer","constructor","selector","targetDate","Date","daysSpan","document","querySelector","hoursSpan","minutesSpan","secondsSpan","_padZero","value","String","padStart","_countDowm","currentTime","time","textContent","Math","floor","showTime","setInterval","timer","startBtn","startTimer","setAttribute","addEventListener"],"mappings":";;;AACqB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAArB,MAAMA,EACJC,aAAY,SACVC,EADU,WAEVC,IAEKA,KAAAA,WAAa,IAAIC,KAAKD,GACtBE,KAAAA,SAAWC,SAASC,iBAAiBL,+BACrCM,KAAAA,UAAYF,SAASC,iBAAiBL,gCACtCO,KAAAA,YAAcH,SAASC,iBAAiBL,+BACxCQ,KAAAA,YAAcJ,SAASC,iBAAiBL,+BAI/CS,SAASC,GACAC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAEnCC,aACQC,MAAAA,EAAc,IAAIZ,KAClBa,EAAO,KAAKd,WAAaa,EAC1BX,KAAAA,SAASa,YAAc,KAAKP,SAASQ,KAAKC,MAAMH,EAAQ,QACxDT,KAAAA,UAAUU,YAAc,KAAKP,SAASQ,KAAKC,MAAOH,EAAQ,MAAyB,OACnFR,KAAAA,YAAYS,YAAc,KAAKP,SAASQ,KAAKC,MAAOH,EAAQ,KAAoB,MAChFP,KAAAA,YAAYQ,YAAc,KAAKP,SAASQ,KAAKC,MAAOH,EAAQ,IAAc,MAGjFI,WACEC,YAAY,IAAM,KAAKP,aAAc,MA1BpB,QAAA,QAAA;;ACcnB,aAfD,IAAA,EAAA,EAAA,QAAA,cAeC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAXF,MAAMQ,EAAQ,IAAIvB,EAAJ,QAAmB,CAC9BE,SAAU,WACVC,WAAY,aAGRqB,EAAWlB,SAASC,cAAc,6BAGxC,SAASkB,IACPD,EAASE,aAAa,WAAY,IAClCH,EAAMF,WAJRG,EAASG,iBAAiB,QAASF;;ACTpC,aADA,QAAA,oBACA,QAAA","file":"src.d7882b20.js","sourceRoot":"../src","sourcesContent":["export default\nclass CountdownTimer {\n  constructor({\n    selector,\n    targetDate\n  }) {\n    this.targetDate = new Date(targetDate);\n    this.daysSpan = document.querySelector(`${selector} .value[data-value=\"days\"]`);\n    this.hoursSpan = document.querySelector(`${selector} .value[data-value=\"hours\"]`);\n    this.minutesSpan = document.querySelector(`${selector} .value[data-value=\"mins\"]`);\n    this.secondsSpan = document.querySelector(`${selector} .value[data-value=\"secs\"]`);\n\n  }\n  \n  _padZero(value) {\n    return String(value).padStart(2, '0');\n  }\n  _countDowm() {\n    const currentTime = new Date();\n    const time = this.targetDate - currentTime;\n    this.daysSpan.textContent = this._padZero(Math.floor(time / (1000 * 60 * 60 * 24)));\n    this.hoursSpan.textContent = this._padZero(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    this.minutesSpan.textContent = this._padZero(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    this.secondsSpan.textContent = this._padZero(Math.floor((time % (1000 * 60)) / 1000));\n  }\n\n  showTime() {\n    setInterval(() => this._countDowm(), 1000);\n  }\n\n}"," import\n CountdownTimer\n    from \"./myTimer\";\n \nconst timer = new CountdownTimer({\n   selector: \"#timer-1\",\n   targetDate: \"2022,1,1\",\n});\n \n const startBtn = document.querySelector(\"button[data-action-start]\");\n startBtn.addEventListener(\"click\", startTimer);\n\n function startTimer() {\n   startBtn.setAttribute('disabled', '')\n   timer.showTime();\n }","import './sass/main.scss';\nimport './js/startTimer';\n"]}